version: '3.8'
services:
  #================================
  #      POSTGRES
  #================================
  db:
    image: postgres:13.0-alpine
    container_name: db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env

  #================================
  #       Redis
  #================================
  redis:
    image: redis:alpine
    hostname: redis
    container_name: redis
    env_file:
      - .env
    volumes:
      - redis_volume:/data
  #================================
  #       Redislabs
  #================================
  redis_insight:
    image: redislabs/redisinsight:latest
    container_name: redislabs
    ports:
      - '8001:8001'
    volumes:
      - redis_insight_volume:/db
    depends_on:
      - redis

  #================================
  #       Async_app
  #================================
  async_app:
    build:
      context: async_api
      dockerfile: Dockerfile
    env_file:
      - async_api/.env
    volumes:
      - ./async_api/src:/app
    depends_on:
      - redis
      - elasticsearch
      - auth_app


  #================================
  #       Elasticsearch
  #================================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
    environment:
      - xpack.security.enabled=false
      - 'discovery.type=single-node'
      - 'ES_JAVA_OPTS=-Xms200m -Xmx200m'
    volumes:
      - elastic_volume:/usr/share/elasticsearch/data


  #================================
  #       Authorization
  #================================
  auth_app:
    build:
      context: auth
      dockerfile: Dockerfile
    container_name: auth_app
    image: auth-flask-image
    env_file:
      - auth/.env
    volumes:
      - ./auth/src:/src
    depends_on:
      - db
      - redis


  #================================
  #       NGINX
  #================================
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      - auth_app

  #================================
  #       JAEGER
  #================================
  jaeger:
    image: jaegertracing/all-in-one:1.36.0
    container_name: jaeger
    restart: always
    ports:
      - "16686:16686"

#================================
#         NETWORK
#================================
networks:
  auth-network:
    external:
      name: src-network

#================================
#         VOLUMES
#================================
volumes:
  postgres_data:
  redis_volume:
  redis_insight_volume:
  elastic_volume: